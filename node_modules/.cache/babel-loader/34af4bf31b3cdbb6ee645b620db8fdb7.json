{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SectionConsumer = (0, _utils.Consumer)(_utils.SectionContext);\n\nvar Flag = function (_Component) {\n  _inherits(Flag, _Component);\n\n  function Flag() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Flag);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Flag.__proto__ || Object.getPrototypeOf(Flag)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      Component: null,\n      isLoaded: false\n    }, _this.node = _react2.default.createRef(), _this.onScroll = function () {\n      if (_this.props.lazyLoad) {\n        var _this$props$lazyLoad = _this.props.lazyLoad,\n            loadOnView = _this$props$lazyLoad.loadOnView,\n            _this$props$lazyLoad$ = _this$props$lazyLoad.delay,\n            delay = _this$props$lazyLoad$ === undefined ? 0 : _this$props$lazyLoad$,\n            loaded = _this$props$lazyLoad.loaded,\n            _this$props$lazyLoad$2 = _this$props$lazyLoad.fromBottom,\n            fromBottom = _this$props$lazyLoad$2 === undefined ? 0 : _this$props$lazyLoad$2;\n\n        if (loadOnView) {\n          // If loadOnView provided then apply scroll\n          // that trigger import when comp is in viewport +  fromBottom\n          var _this$node$current$ge = _this.node.current.getBoundingClientRect(),\n              top = _this$node$current$ge.top;\n\n          _objectDestructuringEmpty(_this.props.lazyLoad);\n\n          if (top - window.innerHeight + fromBottom < 0) {\n            (0, _utils.loadLazyComponent)(loaded).then(function (res) {\n              setTimeout(function () {\n                _this.setState({\n                  Component: res,\n                  isLoaded: true\n                });\n              }, delay);\n              window.removeEventListener(\"scroll\", _this.onScroll);\n            });\n          }\n        }\n      }\n    }, _this.check = function () {\n      // Warn user if provide children when provided lazyload\n      var _this$props = _this.props,\n          children = _this$props.children,\n          _this$props$lazyLoad2 = _this$props.lazyLoad,\n          lazyLoad = _this$props$lazyLoad2 === undefined ? {} : _this$props$lazyLoad2;\n      var lazy = Object.keys(lazyLoad).length !== 0;\n\n      if (lazy && children) {\n        throw new Error(\"Children will not be render if lazyLoad props is provided\");\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Flag, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.lazyLoad) {\n        // If is lazyload add onScroll listener\n        window.addEventListener(\"scroll\", this.onScroll);\n        var _props$lazyLoad$loadi = this.props.lazyLoad.loading,\n            loading = _props$lazyLoad$loadi === undefined ? null : _props$lazyLoad$loadi;\n        this.setState({\n          Component: loading\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.lazyLoad) {\n        var _props$lazyLoad = this.props.lazyLoad,\n            _props$lazyLoad$delay = _props$lazyLoad.delay,\n            delay = _props$lazyLoad$delay === undefined ? 0 : _props$lazyLoad$delay,\n            loaded = _props$lazyLoad.loaded,\n            loadOnView = _props$lazyLoad.loadOnView; // Load component if loadOnVIew is not provided\n\n        if (!loadOnView) {\n          (0, _utils.loadLazyComponent)(loaded).then(function (res) {\n            setTimeout(function () {\n              _this2.setState({\n                Component: res,\n                isLoaded: true\n              });\n            }, delay); // Remove listner\n\n            window.removeEventListener(\"scroll\", _this2.onScroll);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.onScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      this.check();\n\n      var _props = this.props,\n          children = _props.children,\n          flagName = _props.flagName,\n          _props$lazyLoad2 = _props.lazyLoad,\n          lazyLoad = _props$lazyLoad2 === undefined ? {} : _props$lazyLoad2,\n          rest = _objectWithoutProperties(_props, [\"children\", \"flagName\", \"lazyLoad\"]);\n\n      var _state = this.state,\n          Component = _state.Component,\n          isLoaded = _state.isLoaded;\n      var lazy = Object.keys(lazyLoad).length !== 0;\n      var props = rest; // Check if component is lazy load\n\n      if (lazy) {\n        // Then apply provided initProps\n        // If lazy comp is loaded apply rest props not initProps\n        props = !isLoaded ? lazyLoad.initProps : rest;\n      } // If is lazy then render from lazyload comp else render children\n\n\n      var ui = !lazy ? children : _react2.default.createElement(Component, lazyLoad.loadedProps);\n      return _react2.default.createElement(SectionConsumer, null, function (value) {\n        value.onRef(_this3);\n        return _react2.default.createElement(\"div\", _extends({}, props, {\n          ref: _this3.node\n        }), ui);\n      });\n    }\n  }]);\n\n  return Flag;\n}(_react.Component);\n\nFlag.propTypes = {\n  lazyLoad: _propTypes2.default.shape({\n    delay: _propTypes2.default.number,\n    loading: _propTypes2.default.func,\n    loaded: _propTypes2.default.func.isRequired,\n    loadOnView: _propTypes2.default.bool,\n    initProps: _propTypes2.default.object,\n    preClassName: _propTypes2.default.string\n  }),\n  flagName: _propTypes2.default.string.isRequired,\n  className: _propTypes2.default.string\n};\nexports.default = Flag;","map":null,"metadata":{},"sourceType":"script"}